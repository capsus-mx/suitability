labs(x="Year",y="ST index") +
ggtitle("Housing units")
ggplot(unique(h)) +
geom_boxplot(aes(x = as.factor(Year), y = index))+
labs(x="Year",y="ST index") +
ggtitle("Housing developments")
library(ggmap)
cheer_up <- c("#C44D58",
"#FF6B6B",
"#C7F464",
"#4ECDC4",
"#556270")
r1<-raster('/Users/jeda/Desktop/Indonesia Final/Housing Guidelines/Rasters/Suitability_allequal.tif')
r2<-raster('/Users/jeda/Desktop/Indonesia Final/Housing Guidelines/Rasters/Suitability_catequal.tif')
r3<-raster('/Users/jeda/Desktop/Indonesia Final/Housing Guidelines/Rasters/Suitability_econ.tif')
r4<-raster('/Users/jeda/Desktop/Indonesia Final/Housing Guidelines/Rasters/Suitability_edu.tif')
r5<-raster('/Users/jeda/Desktop/Indonesia Final/Housing Guidelines/Rasters/Suitability_health.tif')
r6<-raster('/Users/jeda/Desktop/Indonesia Final/Housing Guidelines/Rasters/Suitability_services.tif')
r7<-raster('/Users/jeda/Desktop/Indonesia Final/Housing Guidelines/Rasters/Suitability_transp.tif')
r12<-aggregate(r1,fun=mean,fact=10)
r22<-aggregate(r2,fun=mean,fact=10)
r32<-aggregate(r3,fun=mean,fact=10)
r42<-aggregate(r4,fun=mean,fact=10)
r52<-aggregate(r5,fun=mean,fact=10)
r62<-aggregate(r6,fun=mean,fact=10)
r72<-aggregate(r7,fun=mean,fact=10)
r_ave<-(r12+r22+r32+r42+r52+r62+r72)/7
ave<-rasterToPoints(r_ave)
colnames(ave)<-c("x","y","value")
s <- stackApply(x = stack(r1, r2, r3, r4, r5, r6, r7),
indices = rep(1, 7),
fun = sd)
s<-aggregate(s,fun=mean,fact=10)
s1 <- rasterToPoints(s)
colnames(s1)<-c("x","y","index")
a <- merge(ave, s1)
head(a)
colnames(a)<-c("x","y","value","agree")
a <- as.data.frame(a)
ggmap(get_map(location = c(lon = 110.370, lat = -7.02),
zoom = 11,
color = "bw",
maptype = "hybrid")) +
geom_point(data = a,
aes(x=x,
y=y,
colour=value,
size=agree^5),
alpha = 0.70,
# ,
shape = 15)+
scale_colour_gradientn(colours=cheer_up,name="ST index")+
scale_size(name="Agreement")+
labs(x="Longitude", y="Latitude")+
coord_equal()+
theme_classic()
ggmap(get_map(location = c(lon = 110.370, lat = -7.02),
zoom = 11,
color = "bw",
maptype = "hybrid")) +
geom_point(data = a,
aes(x=x,
y=y,
colour=value,
size=agree^5),
alpha = 0.70,
# ,
shape = 15)+
scale_colour_gradientn(colours=cheer_up,name="ST index")+
scale_size(name="Agreement", )+
labs(x="Longitude", y="Latitude")+
coord_equal()+
theme_classic(legend.text=element_text(size=4))
ggmap(get_map(location = c(lon = 110.370, lat = -7.02),
zoom = 11,
color = "bw",
maptype = "hybrid")) +
geom_point(data = a,
aes(x=x,
y=y,
colour=value,
size=agree^5),
alpha = 0.70,
# ,
shape = 15)+
scale_colour_gradientn(colours=cheer_up,name="ST index")+
scale_size(name="Agreement", )+
labs(x="Longitude", y="Latitude")+
coord_equal()+
theme_classic()+
theme(legend.text=element_text(size=4))
ggmap(get_map(location = c(lon = 110.370, lat = -7.02),
zoom = 11,
color = "bw",
maptype = "hybrid")) +
geom_point(data = a,
aes(x=x,
y=y,
colour=value,
size=agree^5),
alpha = 0.70,
# ,
shape = 15)+
scale_colour_gradientn(colours=cheer_up,name="ST index")+
scale_size(name="Agreement", )+
labs(x="Longitude", y="Latitude")+
coord_equal()+
theme_classic()+
theme(legend.text=element_text(size=6))
ggmap(get_map(location = c(lon = 110.370, lat = -7.02),
zoom = 11,
color = "bw",
maptype = "hybrid")) +
geom_point(data = a,
aes(x=x,
y=y,
colour=value,
size=agree^5),
alpha = 0.70,
# ,
shape = 15)+
scale_colour_gradientn(colours=cheer_up,name="ST index")+
scale_size(name="Agreement", )+
labs(x="Longitude", y="Latitude")+
coord_equal()+
theme_classic()+
theme(legend.text=element_text(size=13))
ggmap(get_map(location = c(lon = 110.370, lat = -7.02),
zoom = 11,
color = "bw",
maptype = "hybrid")) +
geom_point(data = a,
aes(x=x,
y=y,
colour=value,
size=agree^5),
alpha = 0.70,
# ,
shape = 15)+
scale_colour_gradientn(colours=cheer_up,name="ST index")+
scale_size(name="Agreement",legend.text=element_text(size=15) )+
labs(x="Longitude", y="Latitude")+
coord_equal()+
theme_classic()+
theme(legend.text=element_text(size=15))
ggmap(get_map(location = c(lon = 110.370, lat = -7.02),
zoom = 11,
color = "bw",
maptype = "hybrid")) +
geom_point(data = a,
aes(x=x,
y=y,
colour=value,
size=agree^5),
alpha = 0.70,
# ,
shape = 15)+
scale_colour_gradientn(colours=cheer_up,name="ST index")+
scale_size(name="Agreement")+
labs(x="Longitude", y="Latitude")+
coord_equal()+
theme_classic()+
theme(legend.text=element_text(size=15))
ggmap(get_map(location = c(lon = 110.370, lat = -7.02),
zoom = 11,
color = "bw",
maptype = "hybrid")) +
geom_point(data = a,
aes(x=x,
y=y,
colour=value,
size=agree^5),
alpha = 0.70,
# ,
shape = 15)+
scale_colour_gradientn(colours=cheer_up,name="ST index")+
scale_size(name="Agreement")+
labs(x="Longitude", y="Latitude")+
coord_equal()+
theme_classic()+
theme(legend.text=element_text(size=15),axis.text=element_text(size=12),
axis.title=element_text(size=14))
ggmap(get_map(location = c(lon = 110.370, lat = -7.02),
zoom = 11,
color = "bw",
maptype = "hybrid")) +
geom_point(data = a,
aes(x=x,
y=y,
colour=value,
size=agree^5),
alpha = 0.70,
# ,
shape = 15)+
scale_colour_gradientn(colours=cheer_up,name="ST index")+
scale_size(name="Agreement")+
labs(x="Longitude", y="Latitude")+
coord_equal()+
theme_classic()+
theme(legend.text=element_text(size=13),axis.text=element_text(size=12),
axis.title=element_text(size=14))
semarang_cost_of_land <- read.csv("/Users/jeda/Desktop/Indonesia Final/Housing Guidelines/Data/semarang_cost_of_land.csv")
#Find the Central Business District based on $/area
CDB <- semarang_cost_of_land[which.max(semarang_cost_of_land$pc),]
CDB <- subset(CDB,select=c("lat", "lon"))
#Clean data
semarang_cost_of_land <- subset(semarang_cost_of_land, d < 6.2 | d > 6.3)
#Recalculate d from each point
for(r in 1:nrow(semarang_cost_of_land)){
semarang_cost_of_land[r, "d"]<- estimate_distance(x1 = semarang_cost_of_land[r, "lon"],
y1 = semarang_cost_of_land[r, "lat"],
x2 = CDB$lon,
y2 = CDB$lat)
}
ggplotly(ggplot(data = semarang_cost_of_land) +
geom_histogram(aes(x = d))
)# +
g <- ggplot(data = semarang_cost_of_land,
mapping = aes(x = d, y = pc)) +
geom_point() +
geom_smooth()
# scale_x_log10()
# scale_y_log10()
g
semarang_cost_of_land$distance <- cut(x = semarang_cost_of_land$d, breaks = c(seq(0,20,5), 30))
semarang_cost_of_land <- semarang_cost_of_land[complete.cases(semarang_cost_of_land),]
ggplotly(ggplot(semarang_cost_of_land) +
geom_boxplot(aes(x = distance, y = pc))
)
r3<-raster('/Users/jeda/Desktop/Indonesia Final/Housing Guidelines/Rasters/Suitability_econ.tif')
r4<-raster('/Users/jeda/Desktop/Indonesia Final/Housing Guidelines/Rasters/Suitability_edu.tif')
r5<-raster('/Users/jeda/Desktop/Indonesia Final/Housing Guidelines/Rasters/Suitability_health.tif')
r6<-raster('/Users/jeda/Desktop/Indonesia Final/Housing Guidelines/Rasters/Suitability_services.tif')
r7<-raster('/Users/jeda/Desktop/Indonesia Final/Housing Guidelines/Rasters/Suitability_transp.tif')
r1<-rasterToPoints(r1)
r2<-rasterToPoints(r2)
r3<-rasterToPoints(r3)
r4<-rasterToPoints(r4)
r5<-rasterToPoints(r5)
View(r1)
colnames(r1)<-c("x","y","value")
colnames(r2)<-c("x","y","value")
colnames(r3)<-c("x","y","value")
colnames(r4)<-c("x","y","value")
colnames(r5)<-c("x","y","value")
ggmap(get_map(location = c(lon = 110.370, lat = -7.02),
zoom = 11,
color = "bw",
maptype = "hybrid")) +
geom_point(data = r1,
aes(x=x,
y=y,
colour=value,
size=agree^5),
alpha = 0.70,
# ,
shape = 15)+
scale_colour_gradientn(colours=cheer_up,name="ST index")+
scale_size(name="Agreement")+
labs(x="Longitude", y="Latitude")+
coord_equal()+
theme_classic()+
theme(legend.text=element_text(size=13),axis.text=element_text(size=12),
axis.title=element_text(size=14))
ggmap(get_map(location = c(lon = 110.370, lat = -7.02),
zoom = 11,
color = "bw",
maptype = "hybrid")) +
geom_point(data = r1,
aes(x=x,
y=y,
colour=value,
size=agree^5),
alpha = 0.70,
# ,
shape = 15)+
scale_colour_gradientn(colours=cheer_up,name="ST index")+
scale_size(name="Agreement")+
labs(x="Longitude", y="Latitude")+
coord_equal()+
theme_classic()+
theme(legend.text=element_text(size=13),axis.text=element_text(size=12),
axis.title=element_text(size=14))
r1<-as.data.frame(r1)
ggmap(get_map(location = c(lon = 110.370, lat = -7.02),
zoom = 11,
color = "bw",
maptype = "hybrid")) +
geom_point(data = r1,
aes(x=x,
y=y,
colour=value,
size=agree^5),
alpha = 0.70,
# ,
shape = 15)+
scale_colour_gradientn(colours=cheer_up,name="ST index")+
scale_size(name="Agreement")+
labs(x="Longitude", y="Latitude")+
coord_equal()+
theme_classic()+
theme(legend.text=element_text(size=13),axis.text=element_text(size=12),
axis.title=element_text(size=14))
ggmap(get_map(location = c(lon = 110.370, lat = -7.02),
zoom = 11,
color = "bw",
maptype = "hybrid")) +
geom_point(data = r1,
aes(x=x,
y=y,
colour=value,
size=agree^5),
alpha = 0.70,
# ,
shape = 15)+
scale_colour_gradientn(colours=cheer_up,name="ST index")+
scale_size(name="Agreement")+
labs(x="Longitude", y="Latitude")+
coord_equal()+
theme_classic()+
theme(legend.text=element_text(size=13),axis.text=element_text(size=12),
axis.title=element_text(size=14))
ggmap(get_map(location = c(lon = 110.370, lat = -7.02),
zoom = 11,
color = "bw",
maptype = "hybrid")) +
geom_point(data = r1,
aes(x=x,
y=y,
colour=value),
alpha = 0.70,
# ,
shape = 15)+
scale_colour_gradientn(colours=cheer_up,name="ST index")+
scale_size(name="Agreement")+
labs(x="Longitude", y="Latitude")+
coord_equal()+
theme_classic()+
theme(legend.text=element_text(size=13),axis.text=element_text(size=12),
axis.title=element_text(size=14))
shiny::runApp()
runApp()
runApp()
pal <- colorNumeric(palette = cheer_up,
domain = 0:100,
na.color = "transparent")
pal(x = 20)
list.files()
list.files("_data/Semarang/")
list.files("_data/Semarang/layers")
r1 <- raster("_data/Semarang/layers/Sem_hospitals_final.tif")
raster(nrow= 100, ncol = 100)
r1 <- raster(nrow= 100, ncol = 100)
r1[] <- rnorm(n = 100, mean = 50, sd = 25)
plot(r1)
r1 <- raster(nrow= 10, ncol = 10)
r1[] <- rnorm(n = 100, mean = 50, sd = 25)
plot(r1)
r1
r1[] <- dunif(100, min = 0, max = 100)
plot(r1)
r1[] <- dunif(100)
plot(r1)
r1[] <- runif(100)
plot(r1)
r1[] <- runif(100, min = 0, max = 100)
plot(r1)
r1
plot(r1, col = pal(r1[]))
# r1[] <- runif(100, min = 0, max = 100)
r1[] <- 1:100
plot(r1)
length(c(1:50, 50:1))
# r1[] <- runif(100, min = 0, max = 100)
r1[] <- c(1:50, 50:1)
plot(r1)
# r1[] <- runif(100, min = 0, max = 100)
r1[] <- c(1:5, 5:1)
plot(r1)
# r1[] <- runif(100, min = 0, max = 100)
r1[] <- c(1:50, 50:1)
plot(r1)
r1[] <- c(1:5, 5:1)
plot(r1)
r2 <- raster(nrow= 10, ncol = 10)
r2[] <- c(1:50, 50:1)
plot(r1*r2)
plot(r1*r2)
r3 <- r1*r2
plot(r3)
plot(r1, col = pal(r1[]))
plot(r1, col = pal(r3[]))
plot(r3, col = pal(r3[]))
r3 <- r1*r2
r3 <- r3 / cellStats(r3, stat = max)
plot(r3)
r3 <- r1*r2
r3 <- (r3 - cellStats(r3, stat = min))  / cellStats(r3, stat = max)
plot(r3)
r3
r3 <- 100 * (r3 - cellStats(r3, stat = min))  / cellStats(r3, stat = max)
r3
plot(r3)
plot(r3, col = pal(r3[]))
plot(r3)
plot(r3, col = pal(r3[]))
plot(r3, col = pal)
leaflet() %>%
addRasterImage(r3) # colors = ~pal
r0 <- raster("_data/Semarang/layers/Sem_hospitals_final.tif")
r1 <- raster(nrow= 10, ncol = 10, extent = extent(r0))
extent(r0)
extent(r1) <- extent(r0)
r1[] <- c(1:5, 5:1)
extent(r3) <- extent(r0)
plot(r3)
leaflet() %>%
addRasterImage(r3) # colors = ~pal
leaflet() %>%
addRasterImage(r3, colors = pal) #
r3
pal <- colorNumeric(palette = cheer_up,
domain = 0:100,
na.color = "transparent")
leaflet() %>%
addRasterImage(r3, colors = pal) #
r3
pal <- colorNumeric(palette = cheer_up,
domain = cellStats(r3, stat = min):cellStats(r3, stat = max),
na.color = "transparent")
leaflet() %>%
addRasterImage(r3, colors = pal) #
pal <- colorNumeric(palette = cheer_up,
domain = 0:100,
na.color = "transparent")
leaflet() %>%
addRasterImage(r3, colors = ~pal) #
values(r3)
leaflet() %>%
addRasterImage(r3, colors = pal(~values(r3))) #
leaflet() %>%
addRasterImage(r3, colors = ~pal(values(r3))) #
leaflet() %>%
addRasterImage(r3, colors = ~pal(r3[])) #
leaflet() %>%
addRasterImage(r3, colors = pal) #
pal(0:100)
pal(r3[])
r3
r3[]
pal <- colorNumeric(palette = cheer_up,
domain = -1:101,
na.color = "transparent")
pal(r3[])
leaflet() %>%
addRasterImage(r3, colors = pal)
pal <- colorNumeric(palette = cheer_up,
domain = -1:101,
na.color = "transparent")
runApp()
runApp()
runApp()
runApp()
based_on_this <- raster("/Users/ricardo/GitHub/suitability/_data/Denpasar/layers/Population_Density.tif")
rescale_this <-  raster("/Users/ricardo/GitHub/suitability/_data/Denpasar/layers/Economy_Nighttime_lights.tif")
resample_this <-  raster("/Users/ricardo/GitHub/suitability/_data/Denpasar/layers/Economy_Nighttime_lights.tif")
save_this <- resample(x = resample_this, y = based_on_this)
# this will fail
plot(based_on_this * resample_this)
# this will work
plot(based_on_this * save_this)
# save
writeRaster(x = save_this, "/Users/ricardo/GitHub/suitability/_data/Denpasar/layers/Economy_Nighttime_lights.tif")
# save
writeRaster(x = save_this,
filename = "/Users/ricardo/GitHub/suitability/_data/Denpasar/layers/Economy_Nighttime_lights.tif",
overwrite=TRUE)
runApp()
plot(save_this)
lavelplot(save_this)
levelplot(save_this)
levelplot(log(save_this))
levelplot(ln(save_this))
shiny::runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
shiny::runApp()
runApp()
#libraries
library(raster)
library(ggplot2)
library(leaflet)
# functions
source("_functions.R")
shiny::runApp()
shiny::runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
